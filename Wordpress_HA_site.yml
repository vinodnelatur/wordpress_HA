Parameters:
    KeyPair:
      Description: Use this keypair to SSH into the instances
      Type: AWS::EC2::KeyPair::KeyName    
    Subnet1:
      Type: String
      AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
      ConstraintDescription: "Should be of the format x.x.x.x/x" 
    Subnet2:
      Type: String
      AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
      ConstraintDescription: "Should be of the format x.x.x.x/x"
    AvailabilityZones:
      Description: 'List of Availability Zones to use for the subnets in the VPC. 
      Type: List<AWS::EC2::AvailabilityZone::Name>
    DBNAME:
      AllowedPattern: ^([a-zA-Z0-9]*)$
      Type: String
    DBUSER:
      AllowedPattern: ^([a-zA-Z0-9]*)$
      Type: String
    DBPASS:
      AllowedPattern: ^([a-zA-Z0-9]*)$
      Type: String
Resources:
    InstanceSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Allow http & ssh to client host
        VpcId: !Ref MyVpc
        SecurityGroupIngress:
           - IpProtocol: tcp
             FromPort: 80
             ToPort: 80
             SourceSecurityGroupId: !Ref ApplicationLoadBalancer
           - IpProtocol: tcp
             FromPort: 22
             ToPort: 22
             CidrBlock: 10.0.0.0/16
    ApplicationLoadBalancer:
       Type: AWS::ElasticLoadBalancingV2::LoadBalancer
       Properties:
         SubnetMappings:
           - !GetAtt Subnet1
             !GetAtt Subnet2
    ALBListener:
       Type: AWS::ElasticLoadBalancingV2::Listener
       Properties:
         DefaultActions:
           - Type: forward
             TargetGroupArn:
                Ref: ALBTargetGroup
         LoadBalancerArn:
            Ref: ApplicationLoadBalancer
         Port: '80'
         Protocol: HTTP
    ALBTargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties: 
        Port: 80
        Protocol: HTTP
        VpcId: !Ref MyVpc
    AwsMysqlDb:
      Type: AWS::RDS::DBInstance
      Properties:
          DB_NAME: !Ref DBNAME
          DBInstanceClass: "db.m1.small"
          Engine: "MySQL"
          EngineVersion: "5.6.13"
          MasterUsername: !Ref DBUSER
          MasterUserPassword: !Ref DBPASS
          MultiAZ: 1
    AutoScalingGroup:
      Type: AWS::AutoScaling::AutoScalingGroup
      Properties:
        AvailabilityZones: !Ref AvailabilityZones
        LaunchConfigurationName: !Ref LaunchConfig
        MinSize: 2
        MaxSize: 6
        TargetGroupARNs: !Ref ALBTargetGroup
    LaunchConfig:
       Type: AWS::AutoScaling::LaunchConfiguration
       Properties:
         InstanceType: t2.micro
         ImageId: ami-67589505
         KeyName: !Ref KeyPair
         SecurityGroups: !Ref InstanceSecurityGroup
         UserData:
           Fn::Base64:
              !Sub |
                 #!/bin/bash -xe
                 #Install and setup Wordpress
                 #Install Apache
                 sudo yum install httpd
                 #Install PHP
                 yum install php php-mysql
                 sudo service httpd start
                 #Install wordpress
                 cd /var/www/html
                 wget http://wordpress.org/latest.tar.gz
                 tar -xzvf latest.tar.gzcd
                 #Create the config file
                 mv wp-config-sample.php wp-config.php
                 #Add the DB params
                 sed -i '$ a \#Database params\n "define(‘DB_NAME’,!Ref DBNAME}" \n "define(‘DB_USER’, !Ref DBUSER)" \n "define(‘DB_PASSWORD’, !Ref DBPASS)" \n "define(‘DBHOST’, !GetAtt AwsMysqlDb.Endpoint.Address)"\n' wp-config.php
